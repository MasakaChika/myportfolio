@use './mixins' as *;
/* ------- name animetionb ------- */

@for $i from 1 through 11 {
  $dashValue: 0;
  // Default values for stroke-dashoffset and stroke-dasharray
  @if $i == 1 {
    $dashValue: 1128.88916015625px;
  } @else if $i == 2 {
    $dashValue: 465.85150146484375px;
  } @else if $i == 3 {
    $dashValue: 406.96795654296875px;
  } @else if $i == 4 {
    $dashValue: 465.8518981933594px;
  } @else if $i == 5 {
    $dashValue: 693.8052978515625px;
  } @else if $i == 6 {
    $dashValue: 465.85089111328125px;
  } @else if $i == 7 {
    $dashValue: 664.3232421875px;
  } @else if $i == 8 {
    $dashValue: 648.8483276367188px;
  } @else if $i == 9 {
    $dashValue: 358.988525390625px;
  } @else if $i == 10 {
    $dashValue: 693.811279296875px;
  } @else if $i == 11 {
    $dashValue: 465.85015869140625px;
  }

  @-webkit-keyframes animate-svg-stroke-#{$i} {
    0% {
      stroke-dashoffset: $dashValue;
      stroke-dasharray: $dashValue;
    }
    100% {
      stroke-dashoffset: 0;
      stroke-dasharray: $dashValue;
    }
  }

  @keyframes animate-svg-stroke-#{$i} {
    0% {
      stroke-dashoffset: $dashValue;
      stroke-dasharray: $dashValue;
    }
    100% {
      stroke-dashoffset: 0;
      stroke-dasharray: $dashValue;
    }
  }

  .mv__name-#{$i} {
    -webkit-animation: animate-svg-stroke-#{$i} 5s ease 0s both;
    animation: animate-svg-stroke-#{$i} 5s ease 0s both;
  }
}

.mv {
  grid-column: 2;
  margin-top: 120px;
  height: 85vh;
  display: grid;
  place-items: center; //水平および垂直方向の中央揃え

  &__inner {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    align-items: flex-end;
  }

  &__msg {
    @include enFont;
    text-align: right;
    font-size: 1.5rem; //24px
    line-height: normal;
    letter-spacing: 0.07em; // 1.68px
    span {
      display: inline-block;
    }
  }

  &__name {
    width: 90%;
    height: auto;
    display: block;

    &-1,
    &-2,
    &-3,
    &-4,
    &-5,
    &-6,
    &-7,
    &-8,
    &-9,
    &-10,
    &-11 {
      fill: none;
      stroke: var(--color-text);
      stroke-width: 2px;
    }
  }
  /*
  &__anime {
    --pathlength: 1384;
    fill: transparent;
    stroke: var(--color-text);
    stroke-linecap: round;
    stroke-width: 1.8px;
    stroke-dashoffset: var(--pathlength);
    stroke-dasharray: 0 var(--pathlength);
    animation: loader 5.5s ease-out both;
  }

  @keyframes loader {
    0% {
      stroke-dashoffset: var(--pathlength);
    }
    100% {
      stroke-dasharray: var(--pathlength) 0;
    }
  }

  &__name {
    width: 90%;
    height: auto;
    display: block;
  }
*/
  &__sitename {
    @include enFont;
    text-align: right;
    font-size: 3rem; //48px
    line-height: normal;
    letter-spacing: 0.11em; //5.28px
  }

  @include for-tablet {
    &__inner {
      gap: 0.8rem;
    }

    &__msg {
      font-size: 1rem;
    }

    &__anime {
      stroke-width: 3px;
    }

    &__name {
      width: 100%;
    }

    &__sitename {
      font-size: 2rem;
    }
  }

  @include for-mobile {
    grid-column: 2 / 4;
    margin-top: 40px;

    &__inner {
      gap: 0.8rem;
    }

    &__msg {
      font-size: 0.8rem;
      line-height: 1.5;
    }

    &__anime {
      stroke-width: 3px;
    }

    &__name {
      width: 100%;
    }

    &__sitename {
      font-size: 1.7rem;
    }
  }
}

.vertical-title {
  &__container {
    grid-column: 1;
    grid-row: 2;
    align-self: start; //gridはstrechがデフォルトのため上書きしてスタートにしないとstickyが効かない
    position: -webkit-sticky; // WebKitブラウザ用のフォールバック
    position: sticky;

    top: 56vh; // "svh"ではなく"vh"を使用

    @include for-mobile {
      top: 50svh; // こちらも"svh"から"vh"に修正
    }
  }
  &__text {
    display: inline flow-root; //幅を自動的に内包するコンテンツに合わせるため
    @include enFont;
    font-size: 12px;
    line-height: 1.75em; // 175%
    letter-spacing: 0.16em;
    transform: rotate(90deg); //縦にする
    transform-origin: left top; //rotateは左上を起点にするため
    position: relative;
    left: 2rem;
    white-space: nowrap; // 1行で表示されるように
    transition: top 0.3s; // スムーズな移動のためのトランジション
  }
}

.main-content {
  grid-column: 2;

  display: grid;
  grid-template-columns: 1fr;
  gap: 30vh; //セクション間の間隔

  @include for-mobile {
    grid-column: 3 / 4;
  }
}

/* ------- works ------- */
.works {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(3, auto);
  gap: 24px;

  &__title {
    grid-row: 1;
  }

  &__slider {
    grid-row: 2;
    width: 100%;
  }

  &__all {
    grid-row: 3;
    justify-self: flex-end; // 右端に寄せる(gridの時はjustify-self)
  }
}

.swiper {
  width: 100%;
  &-slide {
    &__img {
      max-width: 100%; /* 画像がコンテナを超えないように */
      height: auto; /* アスペクト比を維持 */
    }
  }
}
/* ------- /. works ------- */

/* ------- about ------- */
.about {
  display: grid;
  grid-template-columns: auto auto 2fr;
  grid-template-rows: repeat(1, auto);
  column-gap: 1.5rem; // 列間隔24px

  &__title {
    grid-column: 3;
    justify-self: end;
  }

  &__photo {
    grid-column: 2;
    grid-row: 1 / 3;
    img {
      width: 100%;
      max-width: 400px;
    }
  }

  &__name {
    grid-column: 1;
    grid-row: 2;
    align-self: end; // 下揃え

    h2 {
      @include jpFont;
      font-size: 28px;
      line-height: normal;
      letter-spacing: 0.214em; // 6px
      text-wrap: nowrap;
    }
  }

  &__text {
    grid-column: 3;
    display: grid;
    grid-template-rows: repeat(3, auto);
    gap: 2rem;

    h3 {
      grid-row: 1;
      @include textFont;
      font-size: 1rem;
      font-weight: 500;
      line-height: 1.25; // 20px
      letter-spacing: 0.075em; // 0.2px
    }
    p {
      grid-row: 2;
      @include textFont;
      font-size: 0.875rem;
      font-weight: 350;
      line-height: 1.71; // 24px
      letter-spacing: 0.0357em; // 0.5px
    }
  }

  &__all {
    grid-row: 3;
    justify-self: flex-end; // 右端に寄せる(gridの時はjustify-self)
  }

  @include for-tablet {
    grid-template-columns: auto auto;
    gap: 1rem;
    width: 100%;

    &__title {
      grid-column: 1;
      justify-self: start;
    }

    &__photo {
      grid-column: 2;
      grid-row: span 2; //2行

      img {
        max-width: 600px;
      }
    }

    &__name {
      grid-column: 1;
      grid-row: 2;
    }

    &__text {
      grid-column: 1 / -1; // 1行全部
      grid-row: 3;
    }
  }

  @include for-mobile {
    grid-template-columns: 1fr; // 1column
    grid-template-rows: auto; // heightは要素に応じて
    gap: 1rem;
    width: 100%;

    &__title {
      grid-column: 1;
      grid-row: 1;
      justify-self: start; // 左寄せ
    }

    &__photo {
      grid-column: 1;
      grid-row: 2;
      justify-self: center; // 中央揃え
    }

    &__name {
      grid-column: 1;
      grid-row: 3;

      h2 {
        @include jpFont;
        font-size: 20px;
        line-height: normal;
        letter-spacing: 0.15em; // 3px
      }
      p {
        text-wrap: wrap;
      }
    }

    &__text {
      grid-column: 1;
      grid-row: 5;
      display: grid;
      grid-template-rows: auto;
      gap: 1rem;

      h3 {
        @include textFont;
        grid-column: 1;
        grid-row: 1;
        font-size: 0.93rem; // 15px
        font-weight: 500; // default400
        line-height: 1.5; // 22.5px
        letter-spacing: 0.073em; // 1.1px
      }
      p {
        @include textFont;
        grid-column: 1;
        grid-row: 2;
        font-size: 0.75rem; // 12px
        font-weight: 350; // mixinとweightが違う
        line-height: 2; // 24px
        letter-spacing: 0.041em; // 0.5px
      }
    }

    &__all {
      grid-column: 1;
      grid-row: 3;
      justify-self: flex-end; // 右端に寄せる(gridの時はjustify-self)
    }
  }
}

/* ------- /.about ------- */
/*
button {
  padding: 0;
  margin: 0;
  border: none;
  background: none;
  cursor: pointer;
}

button {
  --primary-color: #111;
  --hovered-color: #c84747;
  position: relative;
  display: flex;
  font-weight: 600;
  font-size: 20px;
  gap: 0.5rem;
  align-items: center;
}

button p {
  margin: 0;
  position: relative;
  font-size: 20px;
  color: var(--primary-color);
}

button::after {
  position: absolute;
  content: '';
  width: 0;
  left: 0;
  bottom: -7px;
  background: var(--hovered-color);
  height: 2px;
  transition: 0.3s ease-out;
}

button p::before {
  position: absolute;
  //box-sizing: border-box; 
  content: 'Subscribe';
  width: 0%;
  inset: 0;
  color: var(--hovered-color);
  overflow: hidden;
  transition: 0.3s ease-out;
}

button:hover::after {
  width: 100%;
}

button:hover p::before {
  width: 100%;
}

button:hover svg {
  transform: translateX(4px);
  color: var(--hovered-color);
}

button svg {
  color: var(--primary-color);
  transition: 0.2s;
  position: relative;
  width: 15px;
  transition-delay: 0.2s;
}
*/
